// Luscious
//
// Description
//
// sass-lint:disable class-name-format
// ===================================================================
// TODO: Add tests

// ------------------------------------
// Text Alignment Classes
// ------------------------------------

// Align Left
@mixin t-left($info: null) {
	$info-text: info(
	't-left', 'mixin', 'typography',
	$details: 'Left-aligns text in the element.
  Params: none
  CSS Output:
  - text-align: left;'
  );

	@if $info { @debug $info-text; }

	text-align: left;
}


// Align Left-Justify
@mixin t-left--justify($info: null) {
	$info-text: info(
	't-left--justify', 'mixin', 'typography',
	$details: 'Left-aligns and justifies text in the element.
  Params:
  - none
  CSS Output:
  - text-align: justify;
  - direction: ltr;'
  );

	@if $info { @debug $info-text; }

	text-align: justify;
	direction: ltr;
}


// Align Right
@mixin t-right($info: null) {
	$info-text: info(
	't-right', 'mixin', 'typography',
	$details: 'Right-aligns text in the element.
  Params:
  - none
  CSS Output:
  - text-align: right;'
  );

	@if $info { @debug $info-text; }

	text-align: right;
}


// Align Right-Justify
@mixin t-right--justify($info: null) {
	$info-text: info(
  't-right--justify', 'mixin', 'typography',
  $details: 'Right-aligns and justifies text in the element.
  Params:
  - none
  CSS Output:
  - text-align: justify;
  - direction: rtl;'
  );

	@if $info { @debug $info-text; }

	text-align: justify;
	direction: rtl;
}


// Align Center
@mixin t-center($info: null) {
	$info-text: info(
  't-center', 'dependent-mixin', 'typography',
  $details: 'Center-aligns text in the element.
  Params:
  - none
  CSS Output:
  - text-align: center;'
  );

	@if $info { @debug $info-text; }

	text-align: center;
}


// Align Center-Justify
@mixin t-center--justify($info: null) {
	$info-text: info(
  't-center--justify', 'dependent-mixin', 'typography',
  $details: 'Justifies text and center-aligns last line in the element.
  Params:
  - none
  CSS Output:
  - text-align: justify;
  - text-align-last: center;'
  );

	@if $info { @debug $info-text; }

	text-align: justify;
	text-align-last: center;
}


// ------------------------------------
// Image Alignment Classes
// ------------------------------------

// Img Left
@mixin img-left($margin: 1rem) {
	$info-text: info(
  'img-left', 'dependent-mixin', 'media',
  $details: 'Floats image left.
  Params:
  - margin (right): Defaults to `1rem`
  CSS Output:
  - float: left;
  - margin-right: $margin;'
	);

	@if $margin == 'info' { @debug $info-text; }
	@else if $margin != 'auto' and unitless($margin) {
		@debug 'You entered `#{$margin}`, $margin cannot be unitless';
	}
	@else {
		float: left;
		margin-right: $margin;
	}
}

// Img Right
@mixin img-right($margin: 1rem) {
	$info-text: info(
  'img-right', 'dependent-mixin', 'media',
  $details: 'Floats image right.
  Params:
  - margin (left): Defaults to `1rem`
  CSS Output:
  - float: right;
  - margin-left: $margin;'
  );

	@if $margin == 'info' { @debug $info-text; }
	@else if $margin != 'auto' and unitless($margin) {
		@debug 'You entered `#{$margin}`, $margin cannot be unitless';
	}
	@else {
		float: right;
		margin-left: $margin;
	}
}


// Img Center
@mixin img-center($margin: auto) {
	$info-text: info(
  'img-center', 'dependent-mixin', 'media',
  $details: 'Centers Image.
  Params:
  - margin (left & right): Defaults to `auto`
  CSS Output:
  - display: block;
  - margin-left: auto;
  - margin-right: auto;'
  );

	@if $margin == 'info' { @debug $info-text; }
	@else if $margin != 'auto' and unitless($margin) {
		@debug 'You entered `#{$margin}`, $margin cannot be unitless';
	}
	@else {
		display: block;
		margin-left: auto;
		margin-right: auto;
	}
}
