// @title: Img & Font path Functions
// @since: v0.0.6
// @desc:  Creates paths to images and fonts directorys
// ===================================================================

// -------------------------------------
// Img Function
// -------------------------------------

// Debugger
$img-info: logger(
	'img <function>',
	'Creates a file path to your image including the CSS \'url()\' syntax.'
	'to make it easier to insert images in your SASS.'
	'Params:'
	'  $file:  Required. File name with extension wrapped in quotes.'
	'  $path:  Optional. Path from CSS file to image directory.'
	'          Defaults to \'$img_base_path\' (#{$img_base_path}).'
	'---------------'
	'Example In:'
	'.element {'
	'  background: img("photo.jpg");'
	'}'
	'Example Out:'
	'.element {'
		'  background: url("../images/photo.jpg")'
		'}'
);


// Function
@function img($file, $path: $img_base_path) {
	@if $file == "info" { @debug $img-info; }
	@else {
		@return url($path + '/' + $file);
	}
}


// Unit Tests
@include describe('Img path [function]') {
	@include assert-equal (
		img("test.jpg"),
		url("../images/test.jpg")
	);
	@include true-report {
		@include it('Creates the url file path to your image.') {
			@include assert {
				@include output {
					background-image: img("test.jpg");
				}
				@include expect {
					background-image: url("../images/test.jpg");
				}
			}
		}
	}
}


// -------------------------------------
// Font Function
// -------------------------------------

// Debugger
$font-info: logger(
	'font <function>',
	'Creates a file path to your font file including the CSS \'url()\' syntax.'
	'to make it easier to insert fonts in your SASS.'
	'Params:'
	'  $file:  Required. File name with extension wrapped in quotes.'
	'  $path:  Optional. Path from CSS file to font directory.'
	'          Defaults to \'$font_base_path\' (#{$font_base_path}).'
	'---------------'
	'Example In:'
	'@font-face {'
	'  src: font("my-font.otf");'
	'}'
	'Example Out:'
	'@font-face {'
	'  src: url("../fonts/my-font.otf");'
	'}'
);


// Function
@function font($file, $path: $font_base_path) {
	@if $file == "info" { @debug $font-info; }
	@else {
		@return url($path + '/' + $file);
	}
}


// Unit Tests
@include describe('Font path [function]') {
	@include assert-equal (
		font("test.otf"),
		url("../fonts/test.otf")
	);
	@include true-report(solo) {
		@include it('Creates the url file path to your font.') {
			@include assert {
				@include output {
					src: font("test.otf");
				}
				@include expect {
					src: url("../fonts/test.otf");
				}
			}
		}
	}
}