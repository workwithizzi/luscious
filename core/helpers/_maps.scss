// Luscious
// @since v0.0.1
//
// Sass map functions
//
// sass-lint:disable no-css-comments
// ===================================================================

// Add error handling to the `map-get` function
@function map_get_check($map, $key) {
	$info-text: info(
	'map_get_check', 'function', 'internal-utilities',
  $details: 'Adds error handling to the built-in
  `map-get` function and is used in the exact same way.
  - Params:
    - $map: [Required] The SASS map you are using
    - $key: [Required] The key from the $map that you are checking for
  - Output:
    - @return map-get($map, $key);
  ');
	@if $map == 'info' { @debug $info-text; }

	@if map-has-key($map, $key) {
		@return map-get($map, $key);
	}
	@warn 'The key `#{$key}` is not in the map `#{$map}`.
	For more info, try the `__info(map_get_check)` mixin.';
	@return null;
}

// -------------------------------------

// Replace the `map-merge` function so that more than 2 maps can be merged.
// 2DO-LUS: Add better error handling for when a map doesn't exist
@function map_collect($maps...) {
	$info-text: info(
	'map_collect', 'function', 'internal-utilities',
  $details: 'Adds the ability to merge multiple SASS $maps.
  - Params:
    - $maps: [Required] The list of maps to merge.
  - Output:
    @each $map in $maps {
      $collection: map-merge($collection, $map);
    }
    @return $collection;
  ');
	@if $maps == 'info' { @debug $info-text; }

	$collection: ();
	@each $map in $maps {
		$collection: map-merge($collection, $map);
	}
	@return $collection;
}

// -------------------------------------

// Get map nested 1 level deep
// 2DO-LUS: Add error handling (maybe with map_get_check)
@function map_get_nested($parent, $child, $key) {
	$info-text: info(
	'map_get_nested', 'function', 'internal-utilities',
  $details: 'Works just like the `map-get` function
  but for nested maps (1 layer deep).
  - Params:
    - $parent: The parent map
    - $child : The map nested in parent
    - $key   : The key defined in the $child map
  - Output:
    - @return map-get(map-get($parent, $child), $key);
  ');
	@if $parent == 'info' { @debug $info-text; }

	@return map-get(map-get($parent, $child), $key);
}



// ===================================================================
// Tests
// ===================================================================

@mixin __test_map_get_check {
	@if $output_test_message { @debug '[TESTING] `map_get_check`'; }
	/* `map_get_check` ------------------ */
	/*
	$test_map: ( one: red, two: blue );
	.test.map_get_check {
		color: map_get_check($test_map, one);
	}
	*/
	$test_map: ( one: #ff0000, two: #0000ff );
	.test.map_get_check {
		color: map_get_check($test_map, one);
	}
	/* End `map_get_check` -------------- */
}


@mixin __test_map_collect {
	@if $output_test_message { @debug '[TESTING] `map_collect`'; }

	/* `map_collect` -------------------- */
	/*
	$test_map1: ( 1one: red, 1two: blue );
	$test_map2: ( 2one: pink, 2two: purple );
	$test_map3: ( 3one: white, 3two: black );

	$collect_test: map_collect($test_map1, $test_map2, $test_map3);
	.test.map_collect {
		color: map_get_check($collect_test, 1one);
	}
	*/

	$test_map1: ( 1one: #ff0000, 1two: #0000ff );
	$test_map2: ( 2one: #ffc0cb, 2two: #800080 );
	$test_map3: ( 3one: #ffffff, 3two: #000000 );

	$collect_test: map_collect($test_map1, $test_map2, $test_map3);
	.test.map_collect {
		color: map_get_check($collect_test, 1one);
	}
	/* End `map_collect` ---------------- */
}


@mixin __test_map_get_nested {
	@if $output_test_message { @debug '[TESTING] `map_get_nested`'; }
	/* `map_get_nested` ----------------- */
	/*
	$nested_map: (
		child1: (
			one: yellow,
		),
		child2: (
			two: green,
		)
	);
	.test.map_get_nested {
		color: map_get_nested($nested_map, child1, one);
		background-color: map_get_nested($nested_map, child2, two);
	}
	*/
	$nested_map: (
		child1: (
			one: #ffff00,
		),
		child2: (
			two: #008000,
		)
	);
	.test.map_get_nested {
		color: map_get_nested($nested_map, child1, one);
		background-color: map_get_nested($nested_map, child2, two);
	}
	/* End `map_get_nested` ------------- */
}
